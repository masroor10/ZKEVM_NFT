import { jsx } from 'react/jsx-runtime';
import { useEffect } from 'react';

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
const $d663162fd5a0853f$export$38a083d9fb5551ca = "0.22.0";
const $d663162fd5a0853f$export$83bf90b30cdfd29f = ()=>false;
const $d663162fd5a0853f$export$1169f5475725171b = ()=>$d663162fd5a0853f$export$38a083d9fb5551ca;


function $430e3eda76fa4d5f$export$46b1ae20f762ad4c(version) {
    const defaultPackageVersion = ($d663162fd5a0853f$export$1169f5475725171b)();
    if (version === undefined || version.major === undefined) return defaultPackageVersion;
    if (!Number.isInteger(version.major) || version.major < 0) return defaultPackageVersion;
    if (version.minor !== undefined && version.minor < 0) return defaultPackageVersion;
    if (version.patch !== undefined && version.patch < 0) return defaultPackageVersion;
    if (version.major === 0 && version.minor === undefined) return defaultPackageVersion;
    if (version.major === 0 && version.minor === 0 && version.patch === undefined) return defaultPackageVersion;
    if (version.major === 0 && version.minor === undefined && version.patch === undefined) return defaultPackageVersion;
    if (version.major === 0 && version.minor === 0 && version.patch === 0) return defaultPackageVersion;
    let validatedVersion = version.major.toString();
    if (version.minor === undefined) return validatedVersion;
    if (Number.isInteger(version.minor)) validatedVersion += `.${version.minor.toString()}`;
    if (version.patch === undefined) return validatedVersion;
    if (Number.isInteger(version.patch)) validatedVersion += `.${version.patch.toString()}`;
    if (version.prerelease === undefined || version.prerelease !== "alpha") return validatedVersion;
    if (version.prerelease === "alpha") validatedVersion += `-${version.prerelease}`;
    if (version.build === undefined) return validatedVersion;
    if (Number.isInteger(version.build) && version.build >= 0) validatedVersion += `.${version.build.toString()}`;
    return validatedVersion;
}
function $430e3eda76fa4d5f$export$af210a0808087845(config) {
    if (window === undefined) {
        // eslint-disable-next-line no-console
        console.error("missing window object: please run Checkout client side");
        return;
    }
    if (document === undefined) {
        // eslint-disable-next-line no-console
        console.error("missing document object: please run Checkout client side");
        return;
    }
    const checkoutWidgetJS = document.createElement("script");
    const validVersion = $430e3eda76fa4d5f$export$46b1ae20f762ad4c(config?.version);
    let cdnUrl = `https://cdn.jsdelivr.net/npm/@imtbl/sdk@${validVersion}/dist/browser/checkout.js`;
    if (($d663162fd5a0853f$export$83bf90b30cdfd29f)()) cdnUrl = "http://localhost:3000/lib/js/imtbl-checkout.js";
    checkoutWidgetJS.setAttribute("src", cdnUrl);
    document.head.appendChild(checkoutWidgetJS);
    window.ImtblCheckoutWidgetConfig = JSON.stringify(config);
}
function $430e3eda76fa4d5f$export$bf1548ba7e61c17f(config) {
    if (window === undefined) {
        // eslint-disable-next-line no-console
        console.error("missing document object: please run Checkout client side");
        return;
    }
    window.ImtblCheckoutWidgetConfig = JSON.stringify(config);
}


var $207ed853f11d19d5$exports = {};

$parcel$export($207ed853f11d19d5$exports, "IMTBLWidgetEvents", () => $207ed853f11d19d5$export$5a0ace85cae72d45);
var $207ed853f11d19d5$export$5a0ace85cae72d45;
(function(IMTBLWidgetEvents) {
    IMTBLWidgetEvents["IMTBL_CONNECT_WIDGET_EVENT"] = "imtbl-connect-widget";
    IMTBLWidgetEvents["IMTBL_WALLET_WIDGET_EVENT"] = "imtbl-wallet-widget";
    IMTBLWidgetEvents["IMTBL_SWAP_WIDGET_EVENT"] = "imtbl-swap-widget";
    IMTBLWidgetEvents["IMTBL_BRIDGE_WIDGET_EVENT"] = "imtbl-bridge-widget";
    IMTBLWidgetEvents["IMTBL_ONRAMP_WIDGET_EVENT"] = "imtbl-onramp-widget";
})($207ed853f11d19d5$export$5a0ace85cae72d45 || ($207ed853f11d19d5$export$5a0ace85cae72d45 = {}));


var $a85ecdbd885c58ad$exports = {};

$parcel$export($a85ecdbd885c58ad$exports, "ConnectEventType", () => $a85ecdbd885c58ad$export$e72e7f9969a47dd3);
var $a85ecdbd885c58ad$export$e72e7f9969a47dd3;
(function(ConnectEventType) {
    ConnectEventType["CLOSE_WIDGET"] = "close-widget";
    ConnectEventType["SUCCESS"] = "success";
    ConnectEventType["FAILURE"] = "failure";
})($a85ecdbd885c58ad$export$e72e7f9969a47dd3 || ($a85ecdbd885c58ad$export$e72e7f9969a47dd3 = {}));


var $77b6aac5c353d4a9$exports = {};

$parcel$export($77b6aac5c353d4a9$exports, "WalletEventType", () => $77b6aac5c353d4a9$export$d9be06b70b28c742);
var $77b6aac5c353d4a9$export$d9be06b70b28c742;
(function(WalletEventType) {
    WalletEventType["CLOSE_WIDGET"] = "close-widget";
    WalletEventType["NETWORK_SWITCH"] = "network-switch";
    WalletEventType["DISCONNECT_WALLET"] = "disconnect-wallet";
})($77b6aac5c353d4a9$export$d9be06b70b28c742 || ($77b6aac5c353d4a9$export$d9be06b70b28c742 = {}));


var $53d219e7f6bf0cd6$exports = {};

$parcel$export($53d219e7f6bf0cd6$exports, "SwapEventType", () => $53d219e7f6bf0cd6$export$140a49745ab55563);
/**
 * Enum representing possible Swap Widget event types.
 */ var $53d219e7f6bf0cd6$export$140a49745ab55563;
(function(SwapEventType) {
    SwapEventType["CLOSE_WIDGET"] = "close-widget";
    SwapEventType["SUCCESS"] = "success";
    SwapEventType["FAILURE"] = "failure";
    SwapEventType["REJECTED"] = "rejected";
})($53d219e7f6bf0cd6$export$140a49745ab55563 || ($53d219e7f6bf0cd6$export$140a49745ab55563 = {}));


var $15cc9e120aa6f3bf$exports = {};

$parcel$export($15cc9e120aa6f3bf$exports, "BridgeEventType", () => $15cc9e120aa6f3bf$export$d1bfa21f7c76447a);
/**
 * Enum of possible Bridge Widget event types.
 */ var $15cc9e120aa6f3bf$export$d1bfa21f7c76447a;
(function(BridgeEventType) {
    BridgeEventType["CLOSE_WIDGET"] = "close-widget";
    BridgeEventType["SUCCESS"] = "success";
    BridgeEventType["FAILURE"] = "failure";
})($15cc9e120aa6f3bf$export$d1bfa21f7c76447a || ($15cc9e120aa6f3bf$export$d1bfa21f7c76447a = {}));


var $ad06b030b1a3ba34$exports = {};

$parcel$export($ad06b030b1a3ba34$exports, "OrchestrationEventType", () => $ad06b030b1a3ba34$export$b80d2daf830437b9);
/**
 * Enum representing different types of orchestration events.
 */ var $ad06b030b1a3ba34$export$b80d2daf830437b9;
(function(OrchestrationEventType) {
    OrchestrationEventType["REQUEST_CONNECT"] = "request-connect";
    OrchestrationEventType["REQUEST_WALLET"] = "request-wallet";
    OrchestrationEventType["REQUEST_SWAP"] = "request-swap";
    OrchestrationEventType["REQUEST_BRIDGE"] = "request-bridge";
    OrchestrationEventType["REQUEST_ONRAMP"] = "request-onramp";
})($ad06b030b1a3ba34$export$b80d2daf830437b9 || ($ad06b030b1a3ba34$export$b80d2daf830437b9 = {}));


var $d882ddc5600b1284$exports = {};

$parcel$export($d882ddc5600b1284$exports, "OnRampEventType", () => $d882ddc5600b1284$export$66ec39c0924078d8);
/**
 * Enum of possible OnRamp Widget event types.
 */ var $d882ddc5600b1284$export$66ec39c0924078d8;
(function(OnRampEventType) {
    OnRampEventType["CLOSE_WIDGET"] = "close-widget";
    OnRampEventType["SUCCESS"] = "success";
    OnRampEventType["FAILURE"] = "failure";
})($d882ddc5600b1284$export$66ec39c0924078d8 || ($d882ddc5600b1284$export$66ec39c0924078d8 = {}));
/* eslint-disable @typescript-eslint/naming-convention */ 

var $045213b18e9f1f94$exports = {};

$parcel$export($045213b18e9f1f94$exports, "WidgetTheme", () => $045213b18e9f1f94$export$c88931fdc51854eb);
$parcel$export($045213b18e9f1f94$exports, "CheckoutWidgetTagNames", () => $045213b18e9f1f94$export$75be0f6af9650f2c);
/**
 * Enum representing the themes for the Checkout widgets.
 */ var $045213b18e9f1f94$export$c88931fdc51854eb;
(function(WidgetTheme) {
    WidgetTheme["LIGHT"] = "light";
    WidgetTheme["DARK"] = "dark";
})($045213b18e9f1f94$export$c88931fdc51854eb || ($045213b18e9f1f94$export$c88931fdc51854eb = {}));
var $045213b18e9f1f94$export$75be0f6af9650f2c;
(function(CheckoutWidgetTagNames) {
    CheckoutWidgetTagNames["CONNECT"] = "imtbl-connect";
    CheckoutWidgetTagNames["WALLET"] = "imtbl-wallet";
    CheckoutWidgetTagNames["SWAP"] = "imtbl-swap";
    CheckoutWidgetTagNames["BRIDGE"] = "imtbl-bridge";
    CheckoutWidgetTagNames["ONRAMP"] = "imtbl-onramp";
})($045213b18e9f1f94$export$75be0f6af9650f2c || ($045213b18e9f1f94$export$75be0f6af9650f2c = {}));


var $1f969328e5988c99$exports = {};

$parcel$export($1f969328e5988c99$exports, "BridgeReact", () => $1f969328e5988c99$export$30f61ebf204c69f6);


function $77ec335383336bdd$export$931068bc678f0d73(tagName, provider) {
    if (!provider) {
        // eslint-disable-next-line no-console
        console.error("no provider parsed");
        return;
    }
    if (window === undefined) {
        // eslint-disable-next-line no-console
        console.error("missing window object: please run Checkout client side");
        return;
    }
    let attempts = 0;
    const maxAttempts = 10;
    let timer;
    const attemptToSetProvider = ()=>{
        try {
            const elements = document.getElementsByTagName(tagName);
            const widget = elements[0];
            widget.setProvider(provider);
            window.clearInterval(timer);
        } catch (err) {
            attempts++;
            if (attempts >= maxAttempts) {
                window.clearInterval(timer);
                // eslint-disable-next-line no-console
                console.error("failed to set the provider");
            }
        }
    };
    timer = window.setInterval(attemptToSetProvider, 10);
    attemptToSetProvider();
}



function $b222a8f062090058$export$fae4199086a966a3(tagName, passport) {
    if (!passport) {
        // eslint-disable-next-line no-console
        console.error("no passport provided");
        return;
    }
    if (window === undefined) {
        // eslint-disable-next-line no-console
        console.error("missing window object: please run Checkout client side");
        return;
    }
    let attempts = 0;
    const maxAttempts = 10;
    let timer;
    const attemptToAddPassport = ()=>{
        try {
            const elements = document.getElementsByTagName(tagName);
            const widget = elements[0];
            widget.addPassportOption(passport);
            window.clearInterval(timer);
        } catch (err) {
            attempts++;
            if (attempts >= maxAttempts) {
                window.clearInterval(timer);
                // eslint-disable-next-line no-console
                console.error("failed to set the provider");
            }
        }
    };
    timer = window.setInterval(attemptToAddPassport, 10);
    attemptToAddPassport();
}


function $1f969328e5988c99$export$30f61ebf204c69f6(props) {
    const { walletProvider: walletProvider, fromContractAddress: fromContractAddress, amount: amount, provider: provider, passport: passport } = props;
    (useEffect)(()=>{
        if (provider) ($77ec335383336bdd$export$931068bc678f0d73)(($045213b18e9f1f94$export$75be0f6af9650f2c).BRIDGE, provider);
        if (passport) ($b222a8f062090058$export$fae4199086a966a3)(($045213b18e9f1f94$export$75be0f6af9650f2c).BRIDGE, passport);
    }, [
        provider,
        passport
    ]);
    const config = window.ImtblCheckoutWidgetConfig;
    return /*#__PURE__*/ (jsx)("imtbl-bridge", {
        widgetConfig: config,
        walletProvider: walletProvider,
        fromContractAddress: fromContractAddress ?? "",
        amount: amount ?? ""
    });
}


var $f2083cd30e2f5c56$exports = {};

$parcel$export($f2083cd30e2f5c56$exports, "ConnectReact", () => $f2083cd30e2f5c56$export$49d62957f420a1e2);




function $f2083cd30e2f5c56$export$49d62957f420a1e2({ passport: passport }) {
    const config = window.ImtblCheckoutWidgetConfig;
    (useEffect)(()=>{
        if (passport) ($b222a8f062090058$export$fae4199086a966a3)(($045213b18e9f1f94$export$75be0f6af9650f2c).CONNECT, passport);
    }, [
        passport
    ]);
    return /*#__PURE__*/ (jsx)("imtbl-connect", {
        widgetConfig: config
    });
}


var $a4fbb8e3a6aeff58$exports = {};

$parcel$export($a4fbb8e3a6aeff58$exports, "SwapReact", () => $a4fbb8e3a6aeff58$export$971e031379577f4);
/* eslint-disable max-len */ 




function $a4fbb8e3a6aeff58$export$971e031379577f4(props) {
    const { walletProvider: walletProvider, fromContractAddress: fromContractAddress, amount: amount, toContractAddress: toContractAddress, provider: provider, passport: passport } = props;
    (useEffect)(()=>{
        if (provider) ($77ec335383336bdd$export$931068bc678f0d73)(($045213b18e9f1f94$export$75be0f6af9650f2c).SWAP, provider);
        if (passport) ($b222a8f062090058$export$fae4199086a966a3)(($045213b18e9f1f94$export$75be0f6af9650f2c).SWAP, passport);
    }, [
        provider,
        passport
    ]);
    const config = window.ImtblCheckoutWidgetConfig;
    return /*#__PURE__*/ (jsx)("imtbl-swap", {
        widgetConfig: config,
        walletProvider: walletProvider,
        fromContractAddress: fromContractAddress ?? "",
        toContractAddress: toContractAddress ?? "",
        amount: amount ?? ""
    });
}


var $89d55ace0f8f1c07$exports = {};

$parcel$export($89d55ace0f8f1c07$exports, "WalletReact", () => $89d55ace0f8f1c07$export$ceaac94f34dba154);





function $89d55ace0f8f1c07$export$ceaac94f34dba154(props) {
    const { walletProvider: walletProvider, provider: provider, passport: passport } = props;
    (useEffect)(()=>{
        if (provider) ($77ec335383336bdd$export$931068bc678f0d73)(($045213b18e9f1f94$export$75be0f6af9650f2c).WALLET, provider);
        if (passport) ($b222a8f062090058$export$fae4199086a966a3)(($045213b18e9f1f94$export$75be0f6af9650f2c).WALLET, passport);
    }, [
        provider,
        passport
    ]);
    const config = window.ImtblCheckoutWidgetConfig;
    return /*#__PURE__*/ (jsx)("imtbl-wallet", {
        widgetConfig: config,
        walletProvider: walletProvider
    });
}


var $f94f63f2c041a04c$exports = {};

$parcel$export($f94f63f2c041a04c$exports, "OnRampReact", () => $f94f63f2c041a04c$export$9e363c61ea99bbb4);





function $f94f63f2c041a04c$export$9e363c61ea99bbb4(props) {
    const { walletProvider: walletProvider, amount: amount, provider: provider, passport: passport, contractAddress: contractAddress } = props;
    (useEffect)(()=>{
        if (provider) ($77ec335383336bdd$export$931068bc678f0d73)(($045213b18e9f1f94$export$75be0f6af9650f2c).ONRAMP, provider);
        if (passport) ($b222a8f062090058$export$fae4199086a966a3)(($045213b18e9f1f94$export$75be0f6af9650f2c).ONRAMP, passport);
    }, [
        provider,
        passport
    ]);
    const config = window.ImtblCheckoutWidgetConfig;
    return /*#__PURE__*/ (jsx)("imtbl-onramp", {
        widgetConfig: config,
        walletProvider: walletProvider,
        amount: amount ?? "",
        contractAddress: contractAddress ?? ""
    });
}

export { $15cc9e120aa6f3bf$export$d1bfa21f7c76447a as BridgeEventType, $1f969328e5988c99$export$30f61ebf204c69f6 as BridgeReact, $045213b18e9f1f94$export$75be0f6af9650f2c as CheckoutWidgetTagNames, $430e3eda76fa4d5f$export$af210a0808087845 as CheckoutWidgets, $a85ecdbd885c58ad$export$e72e7f9969a47dd3 as ConnectEventType, $f2083cd30e2f5c56$export$49d62957f420a1e2 as ConnectReact, $207ed853f11d19d5$export$5a0ace85cae72d45 as IMTBLWidgetEvents, $d882ddc5600b1284$export$66ec39c0924078d8 as OnRampEventType, $f94f63f2c041a04c$export$9e363c61ea99bbb4 as OnRampReact, $ad06b030b1a3ba34$export$b80d2daf830437b9 as OrchestrationEventType, $53d219e7f6bf0cd6$export$140a49745ab55563 as SwapEventType, $a4fbb8e3a6aeff58$export$971e031379577f4 as SwapReact, $430e3eda76fa4d5f$export$bf1548ba7e61c17f as UpdateConfig, $77b6aac5c353d4a9$export$d9be06b70b28c742 as WalletEventType, $89d55ace0f8f1c07$export$ceaac94f34dba154 as WalletReact, $045213b18e9f1f94$export$c88931fdc51854eb as WidgetTheme };
