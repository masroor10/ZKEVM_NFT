import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MockEIP1271Wallet, MockEIP1271WalletInterface } from "../../../contracts/mocks/MockEIP1271Wallet";
type MockEIP1271WalletConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockEIP1271Wallet__factory extends ContractFactory {
    constructor(...args: MockEIP1271WalletConstructorParams);
    deploy(_owner: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockEIP1271Wallet>;
    getDeployTransaction(_owner: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockEIP1271Wallet;
    connect(signer: Signer): MockEIP1271Wallet__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060405161050838038061050883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610475806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b5780638da5cb5b1461006c575b600080fd5b61004e61004936600461036e565b610097565b6040516001600160e01b031990911681526020015b60405180910390f35b60005461007f906001600160a01b031681565b6040516001600160a01b039091168152602001610063565b6000806100a484846100d9565b6000549091506001600160a01b03908116908216036100cd5750630b135d3f60e11b90506100d3565b50600090505b92915050565b60008060006100e885856100fd565b915091506100f581610142565b509392505050565b60008082516041036101335760208301516040840151606085015160001a61012787828585610294565b9450945050505061013b565b506000905060025b9250929050565b600081600481111561015657610156610429565b0361015e5750565b600181600481111561017257610172610429565b036101c45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156101d8576101d8610429565b036102255760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101bb565b600381600481111561023957610239610429565b036102915760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101bb565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156102cb575060009050600361034f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561031f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103485760006001925092505061034f565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561038157600080fd5b82359150602083013567ffffffffffffffff808211156103a057600080fd5b818501915085601f8301126103b457600080fd5b8135818111156103c6576103c6610358565b604051601f8201601f19908116603f011681019083821181831017156103ee576103ee610358565b8160405282815288602084870101111561040757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220434954b618618fd553edcef3db9368247119118dcbba3fc2faff102fda71712764736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "isValidSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MockEIP1271WalletInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockEIP1271Wallet;
}
export {};
