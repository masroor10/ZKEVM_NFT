import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { OperatorAllowlistEnforcementErrors, OperatorAllowlistEnforcementErrorsInterface } from "../../../../contracts/errors/Errors.sol/OperatorAllowlistEnforcementErrors";
export declare class OperatorAllowlistEnforcementErrors__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "AllowlistDoesNotImplementIOperatorAllowlist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly name: "ApproveTargetNotInAllowlist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "approver";
            readonly type: "address";
        }];
        readonly name: "ApproverNotInAllowlist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerNotInAllowlist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }];
        readonly name: "TransferFromNotInAllowlist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly name: "TransferToNotInAllowlist";
        readonly type: "error";
    }];
    static createInterface(): OperatorAllowlistEnforcementErrorsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OperatorAllowlistEnforcementErrors;
}
