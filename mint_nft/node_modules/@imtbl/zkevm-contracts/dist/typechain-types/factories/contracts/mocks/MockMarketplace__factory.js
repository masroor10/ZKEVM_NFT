"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockMarketplace__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "executeApproveForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "executeTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "executeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
        ],
        name: "executeTransferRoyalties",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "royaltyAddress",
        outputs: [
            {
                internalType: "contract IERC2981",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "tokenAddress",
        outputs: [
            {
                internalType: "contract IERC721",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161063738038061063783398101604081905261002f9161005e565b600080546001600160a01b039092166001600160a01b031992831681179091556001805490921617905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b61059a8061009d6000396000f3fe6080604052600436106100555760003560e01c8063182d0af91461005a5780633f5c84c11461006f5780639d76ea581461008f578063ad2f852a146100cb578063b46a1211146100eb578063fd6b73ad1461010b575b600080fd5b61006d61006836600461041e565b61012b565b005b34801561007b57600080fd5b5061006d61008a366004610464565b6102e8565b34801561009b57600080fd5b506000546100af906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d757600080fd5b506001546100af906001600160a01b031681565b3480156100f757600080fd5b5061006d6101063660046104a5565b61035b565b34801561011757600080fd5b5061006d6101263660046104e3565b6103c7565b8034146101775760405162461bcd60e51b8152602060048201526016602482015275696e73756666696369656e74206d73672e76616c756560501b604482015260640160405180910390fd5b60015460405163152a902d60e11b8152600481018490526024810183905260009182916001600160a01b0390911690632a55205a906044016040805180830381865afa1580156101cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ef919061050f565b90925090506000610200823461053d565b6040519091506001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610239573d6000803e3d6000fd5b506040516001600160a01b0388169082156108fc029083906000818181858888f19350505050158015610270573d6000803e3d6000fd5b506000546040516323b872dd60e01b81526001600160a01b038981166004830152888116602483015260448201889052909116906323b872dd90606401600060405180830381600087803b1580156102c757600080fd5b505af11580156102db573d6000803e3d6000fd5b5050505050505050505050565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401600060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b50505050505050565b60005460405163a22cb46560e01b81526001600160a01b03848116600483015283151560248301529091169063a22cb465906044015b600060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b505050505050565b6000546040516323b872dd60e01b81523360048201526001600160a01b03848116602483015260448201849052909116906323b872dd90606401610391565b6001600160a01b038116811461041b57600080fd5b50565b6000806000806080858703121561043457600080fd5b843561043f81610406565b9350602085013561044f81610406565b93969395505050506040820135916060013590565b60008060006060848603121561047957600080fd5b833561048481610406565b9250602084013561049481610406565b929592945050506040919091013590565b600080604083850312156104b857600080fd5b82356104c381610406565b9150602083013580151581146104d857600080fd5b809150509250929050565b600080604083850312156104f657600080fd5b823561050181610406565b946020939093013593505050565b6000806040838503121561052257600080fd5b825161052d81610406565b6020939093015192949293505050565b8181038181111561055e57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122004f714c36e147a31581d9616cd454c41502ef5000be1147897792b07151d968364736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MockMarketplace__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_tokenAddress, overrides) {
        return super.deploy(_tokenAddress, overrides || {});
    }
    getDeployTransaction(_tokenAddress, overrides) {
        return super.getDeployTransaction(_tokenAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockMarketplace__factory = MockMarketplace__factory;
MockMarketplace__factory.bytecode = _bytecode;
MockMarketplace__factory.abi = _abi;
