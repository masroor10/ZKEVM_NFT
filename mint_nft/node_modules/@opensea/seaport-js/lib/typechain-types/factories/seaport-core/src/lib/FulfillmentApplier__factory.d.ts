import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FulfillmentApplier, FulfillmentApplierInterface } from "../../../../seaport-core/src/lib/FulfillmentApplier";
type FulfillmentApplierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class FulfillmentApplier__factory extends ContractFactory {
    constructor(...args: FulfillmentApplierConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<FulfillmentApplier>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): FulfillmentApplier;
    connect(signer: Signer): FulfillmentApplier__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208de25543bd51dd4847ac21f910db7aae240ae1f363687a700f6ef7be06dfbbd764736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "InvalidFulfillmentComponentData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fulfillmentIndex";
            readonly type: "uint256";
        }];
        readonly name: "MismatchedFulfillmentOfferAndConsiderationComponents";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum Side";
            readonly name: "side";
            readonly type: "uint8";
        }];
        readonly name: "MissingFulfillmentComponentOnAggregation";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OfferAndConsiderationRequiredOnFulfillment";
        readonly type: "error";
    }];
    static createInterface(): FulfillmentApplierInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): FulfillmentApplier;
}
export {};
