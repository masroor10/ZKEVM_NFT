import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReentrancyGuard, ReentrancyGuardInterface } from "../../../../seaport-core/src/lib/ReentrancyGuard";
type ReentrancyGuardConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ReentrancyGuard__factory extends ContractFactory {
    constructor(...args: ReentrancyGuardConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<ReentrancyGuard>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): ReentrancyGuard;
    connect(signer: Signer): ReentrancyGuard__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b506001600055603f8060226000396000f3fe6080604052600080fdfea26469706673582212202065edf1421564d892f393e631684fb031aaeb80f6fb4c97965754c7df87154b64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoReentrantCalls";
        readonly type: "error";
    }];
    static createInterface(): ReentrancyGuardInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ReentrancyGuard;
}
export {};
