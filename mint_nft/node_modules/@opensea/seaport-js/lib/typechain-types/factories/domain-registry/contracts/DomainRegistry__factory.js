"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DomainRegistry__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "domain",
                type: "string",
            },
        ],
        name: "DomainAlreadyRegistered",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
            {
                internalType: "uint256",
                name: "maxIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "suppliedIndex",
                type: "uint256",
            },
        ],
        name: "DomainIndexOutOfRange",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "domain",
                type: "string",
            },
            {
                indexed: false,
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "DomainRegistered",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "getDomain",
        outputs: [
            {
                internalType: "string",
                name: "domain",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
        ],
        name: "getDomains",
        outputs: [
            {
                internalType: "string[]",
                name: "domains",
                type: "string[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
        ],
        name: "getNumberOfDomains",
        outputs: [
            {
                internalType: "uint256",
                name: "totalDomains",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "domain",
                type: "string",
            },
        ],
        name: "setDomain",
        outputs: [
            {
                internalType: "bytes4",
                name: "tag",
                type: "bytes4",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610825806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063432ba75c14610051578063d45619b61461008e578063e5eab096146100ae578063eab5fc24146100da575b600080fd5b61007b61005f366004610459565b6001600160e01b03191660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100a161009c366004610459565b6100fa565b60405161008591906104c1565b6100c16100bc366004610523565b6101e8565b6040516001600160e01b03199091168152602001610085565b6100ed6100e8366004610595565b61030d565b60405161008591906105bf565b6001600160e01b03198116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156101dd578382906000526020600020018054610150906105d2565b80601f016020809104026020016040519081016040528092919081815260200182805461017c906105d2565b80156101c95780601f1061019e576101008083540402835291602001916101c9565b820191906000526020600020905b8154815290600101906020018083116101ac57829003601f168201915b505050505081526020019060010190610131565b505050509050919050565b6000600183836040516101fc92919061060c565b9081526040519081900360200190205460ff161561023a5782826040516350cb29b360e01b8152600401610231929190610645565b60405180910390fd5b600180848460405161024d92919061060c565b90815260405160209181900382018120805460ff19169315159390931790925561027b91859185910161060c565b60408051601f1981840301815291815281516020928301206001600160e01b03198116600090815280845291822080546001810182559083529290912090925081016102c88486836106c6565b507fe1a483db0873e9c9247adea872915ec5b4ca6f23d07334941b368c0c04224c0d848484846040516102fe9493929190610787565b60405180910390a15092915050565b6001600160e01b0319821660009081526020819052604081205460609190610337906001906107b8565b90508083111561037457604051630a6e1dad60e31b81526001600160e01b0319851660048201526024810182905260448101849052606401610231565b6001600160e01b03198416600090815260208190526040902080548490811061039f5761039f6107d9565b9060005260206000200180546103b4906105d2565b80601f01602080910402602001604051908101604052809291908181526020018280546103e0906105d2565b801561042d5780601f106104025761010080835404028352916020019161042d565b820191906000526020600020905b81548152906001019060200180831161041057829003601f168201915b50505050509150505b92915050565b80356001600160e01b03198116811461045457600080fd5b919050565b60006020828403121561046b57600080fd5b6104748261043c565b9392505050565b6000815180845260005b818110156104a157602081850181015186830182015201610485565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561051657603f1988860301845261050485835161047b565b945092850192908501906001016104e8565b5092979650505050505050565b6000806020838503121561053657600080fd5b823567ffffffffffffffff8082111561054e57600080fd5b818501915085601f83011261056257600080fd5b81358181111561057157600080fd5b86602082850101111561058357600080fd5b60209290920196919550909350505050565b600080604083850312156105a857600080fd5b6105b18361043c565b946020939093013593505050565b602081526000610474602083018461047b565b600181811c908216806105e657607f821691505b60208210810361060657634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600061065960208301848661061c565b949350505050565b634e487b7160e01b600052604160045260246000fd5b601f8211156106c157600081815260208120601f850160051c8101602086101561069e5750805b601f850160051c820191505b818110156106bd578281556001016106aa565b5050505b505050565b67ffffffffffffffff8311156106de576106de610661565b6106f2836106ec83546105d2565b83610677565b6000601f841160018114610726576000851561070e5750838201355b600019600387901b1c1916600186901b178355610780565b600083815260209020601f19861690835b828110156107575786850135825560209485019460019092019101610737565b50868210156107745760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60608152600061079b60608301868861061c565b6001600160e01b0319949094166020830152506040015292915050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ea8f6d04a09d06f0493de1d2e518120d8862a4a01c212fff6c9bab7ea7a8073264736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class DomainRegistry__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DomainRegistry__factory = DomainRegistry__factory;
DomainRegistry__factory.bytecode = _bytecode;
DomainRegistry__factory.abi = _abi;
//# sourceMappingURL=DomainRegistry__factory.js.map